# Generated by Django 5.0.6 on 2024-06-20 01:36

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import transactions.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when this object was created.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when this object was last updated.', verbose_name='Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for this object.', primary_key=True, serialize=False, verbose_name='UUID')),
                ('balance', models.DecimalField(decimal_places=2, default=0.0, help_text='The current balance of the wallet.', max_digits=10, validators=[django.core.validators.MinValueValidator(0, message='Non-negative value required, got %(show_value)s.')], verbose_name='Balance')),
            ],
            options={
                'verbose_name': 'Wallet',
                'verbose_name_plural': 'Wallets',
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('created', models.DateTimeField(auto_now_add=True, help_text='The date and time when this object was created.', verbose_name='Created')),
                ('updated', models.DateTimeField(auto_now=True, help_text='The date and time when this object was last updated.', verbose_name='Updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='A unique identifier for this object.', primary_key=True, serialize=False, verbose_name='UUID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='The amount of the transaction.', max_digits=10, validators=[transactions.validators.validate_positive_amount], verbose_name='Amount')),
                ('scheduled_time', models.DateTimeField(help_text='The scheduled time of the transaction.', validators=[django.core.validators.MinValueValidator(django.utils.timezone.now, message='Date must be in the future, got %(show_value)s. Current time: %(limit_value)s.')], verbose_name='Scheduled Time')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('SUCCESS', 'Success'), ('FAILED', 'Failed')], default='PENDING', editable=False, help_text='The status of the transaction.', max_length=10, verbose_name='Status')),
                ('error_message', models.TextField(blank=True, editable=False, help_text='The error message if the transaction failed.', max_length=1023, verbose_name='Error Message')),
                ('receiver', models.ForeignKey(help_text='The wallet to which the transaction is made.', on_delete=django.db.models.deletion.CASCADE, related_name='incoming_transactions', to='transactions.wallet', verbose_name='Receiver Wallet')),
                ('sender', models.ForeignKey(help_text='The wallet from which the transaction is made.', on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_transactions', to='transactions.wallet', verbose_name='Sender Wallet')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
            },
        ),
    ]
